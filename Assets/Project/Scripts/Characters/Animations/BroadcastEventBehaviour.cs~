using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using AYellowpaper.SerializedCollections;
using Project.Scripts.Events;
using UnityEngine;

namespace Project.Scripts.Animations;

public abstract class BroadcastEventBehaviour<T> : AnimatorStateBehaviour where T : notnull {
    [field: SerializeField]
    private EventChannel<T>? NotificationChannel { get; set; }
    
    [NotNull]
    [field: SerializeField]
    private T? Message { get; set; }

    protected override void Execute(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {
        this.NotificationChannel?.Broadcast(animator, this.Message);
    }
}

public class BroadcastBooleanEventBehaviour : BroadcastEventBehaviour<bool>;
