using System.Collections.Generic;
using AYellowpaper.SerializedCollections;
using Project.Scripts.Util;
using Project.Scripts.Util.Linq;
using UnityEngine;

namespace Project.Scripts.Events;

public abstract class EventChannel<T> : ScriptableObject {
    private HashSet<EventSubscription<T>> Subscriptions { get; } = [];
    
    public void Broadcast(Object sender, T data) {
        this.Subscriptions.ForEach(subscription => subscription.ReactTo(new GameEvent<T>(sender, data)));
    }
    
    public void Register(EventSubscription<T> subscription) {
        if (!this.Subscriptions.Add(subscription)) {
            Debug.LogWarning("Duplicate event subscription found.");
        }
    }

    public void Unregister(EventSubscription<T> subscription) {
        if (!this.Subscriptions.Remove(subscription)) {
            Debug.LogWarning("Trying to unregister non-existent event subscription.");
        }
    }
}

/*[CreateAssetMenu(fileName = "Int Event Channel", menuName = "Event System/Int Event Channel")]
public class IntEventChannel : EventChannel<int>;

[CreateAssetMenu(fileName = "Float Event Channel", menuName = "Event System/Float Event Channel")]
public class FloatEventChannel : EventChannel<float>;

[CreateAssetMenu(fileName = "Bool Event Channel", menuName = "Event System/Bool Event Channel")]
public class BoolEventChannel : EventChannel<bool>;

[CreateAssetMenu(fileName = "Vector2 Event Channel", menuName = "Event System/Vector2 Event Channel")]
public class Vector2EventChannel : EventChannel<Vector2>;   

[CreateAssetMenu(fileName = "Vector3 Event Channel", menuName = "Event System/Vector3 Event Channel")]
public class Vector3EventChannel : EventChannel<Vector3>;   

[CreateAssetMenu(fileName = "Vector4 Event Channel", menuName = "Event System/Vector4 Event Channel")]
public class Vector4EventChannel : EventChannel<Vector4>;

[CreateAssetMenu(fileName = "Dictionary Event Channel", menuName = "Event System/Dictionary Event Channel")]
public class DictionaryEventChannel : EventChannel<SerializedDictionary<string, object>>;

[CreateAssetMenu(fileName = "GameObject Event Channel", menuName = "Event System/GameObject Event Channel")]
public class GameObjectEventChannel : EventChannel<GameObject>;

[CreateAssetMenu(fileName = "List Event Channel", menuName = "Event System/List Event Channel")]
public class TransformEventChannel : EventChannel<List<object>>;*/


